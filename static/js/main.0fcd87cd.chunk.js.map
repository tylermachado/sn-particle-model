{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","changeActive","bind","state","type","text","x","this","substance","findActive","data","filter","d","toString","toLowerCase","setState","active","particlesrendered","particles","map","p","className","particle","split","join","onMouseOver","subtypes","subt","dangerouslySetInnerHTML","__html","symbol","name","onClick","changeMode","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"82KAkHeA,E,kDA3Gb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,MAAQ,CACX,OAAU,CACRC,KAAM,qCACNC,KAAM,2DAER,UAAa,UARE,E,gDAYnB,SAAaC,GACX,GAA6B,WAAzBC,KAAKJ,MAAMK,UAAwB,CACrC,IAAIC,EAAaC,EAAaC,QAAO,SAAAC,GAAC,OAAKA,EAAER,KAAKS,WAAWC,gBAAkBR,EAAEO,WAAWC,iBAAgB,GAC5GP,KAAKQ,SAAS,CACZC,OAAQP,O,wBAKd,WAC+B,WAAzBF,KAAKJ,MAAMK,UACbD,KAAKQ,SAAS,CACZP,UAAW,aACXQ,OAAQ,CACNZ,KAAM,aACNC,KAAM,+uBAIVE,KAAKQ,SAAS,CACZP,UAAW,SACXQ,OAAQ,CACNZ,KAAM,GACNC,KAAM,Q,oBAMd,WAAU,IACJY,EADG,OAmCP,OAhCEA,EAAoBC,EAAkBC,KAAI,SAAAC,GAAC,OACzC,yBAASC,UACN,EAAKlB,MAAMa,OAAX,KAA0BF,gBAAkBM,EAAEE,SAASR,cACtD,QAAUM,EAAEE,SAASC,MAAM,KAAKC,KAAK,KAAO,eAC5C,QAAUJ,EAAEE,SAASC,MAAM,KAAKC,KAAK,KAAO,QAC5CC,YAAa,kBAAM,EAAKxB,aAAamB,EAAEE,WAJ3C,SAKKF,EAAEM,SAASP,KAAI,SAAAQ,GAAI,OAClB,qBAAKN,UAAU,WAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,SAASO,wBAAyB,CAAEC,OAAQF,EAAKG,UAChE,qBAAKT,UAAU,OAAf,SAAuBM,EAAKI,oBAuBxC,qBAAKV,UAAU,MAAf,SAEE,sBAAKA,UAAW,uBAAyBd,KAAKJ,MAAMK,UAApD,UACGS,EACD,0BAASI,UAAU,aAAaW,QAAS,kBAAM,EAAKC,cAApD,UACE,qBAAKZ,UAAoC,WAAzBd,KAAKJ,MAAMK,UAAyB,yBAA2B,kBAA/E,oBACA,qBAAKa,UAAoC,eAAzBd,KAAKJ,MAAMK,UAA6B,yBAA2B,kBAAnF,2BAEF,yBAASa,UAC0B,gBAA9Bd,KAAKJ,MAAMa,OAAX,KACD,+BACA,wBACDS,YAAa,kBAAM,EAAKxB,aAAa,gBAJxC,SAKE,qBAAKoB,UAAU,WAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,SAAf,eACA,qBAAKA,UAAU,OAAf,gCAIN,0BAASA,UAAU,UAAnB,UACE,6BAAKd,KAAKJ,MAAMa,OAAOZ,OACvB,mBAAGwB,wBAA0B,CAAEC,OAAQtB,KAAKJ,MAAMa,OAAOX,oB,GApGnD6B,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0fcd87cd.chunk.js","sourcesContent":["import './App.scss';\nimport React, { Component } from 'react'\nimport * as data from './data/text.json';\nimport * as particles from './data/particles.json';\nimport * as antiparticles from './data/antiparticles.json';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.changeActive = this.changeActive.bind(this);\n    this.state = { \n      \"active\": {\n        type: \"Standard model of particle physics\",\n        text: \"Tap the surrounding sections for more on each category.\"\n      },\n      \"substance\": \"matter\"\n    };\n  }\n\n  changeActive(x) {\n    if (this.state.substance === \"matter\") {\n      let findActive = data.default.filter(d => (d.type.toString().toLowerCase() === x.toString().toLowerCase()))[0];\n      this.setState({\n        active: findActive\n      })\n    }\n  }\n\n  changeMode() {\n    if (this.state.substance === \"matter\") {\n      this.setState({\n        substance: \"antimatter\",\n        active: {\n          type: \"Antimatter\",\n          text: \"Each type of matter particle has an antimatter partner. Antiparticles have the opposite electric charge, but are otherwise identical to their alter-egos. Physicists are still <a href='https://www.sciencenews.org/article/mounting-evidence-suggests-neutrinos-are-key-why-antimatter-is-rare'>trying to understand</a> why matter is more prevalent than antimatter. For example, negatively charged electrons are much more prevalent in our cosmos than their positively-charged antiparticle, positrons. Because neutrinos have no electric charge, scientists are puzzling over whether neutrinos and antineutrinos are <a href='https://www.sciencenews.org/article/quest-identify-nature-neutrinos-alter-ego-heating'>distinct particles</a>, or the same thing.\"\n        }\n      })\n    } else {\n      this.setState({\n        substance: \"matter\",\n        active: {\n          type: \"\",\n          text: \"\"\n        }\n      })\n    }\n  }\n\n  render() {\n    let particlesrendered;\n    // if (this.state.substance === \"matter\") {\n      particlesrendered = particles.default.map(p => (\n        <section className={\n          (this.state.active[\"type\"].toLowerCase() === p.particle.toLowerCase()) ?\n            \"area-\" + p.particle.split(' ').join('-') + \" zone active\" :\n            \"area-\" + p.particle.split(' ').join('-') + \" zone\"\n          } onMouseOver={() => this.changeActive(p.particle)}>\n            {p.subtypes.map(subt => (\n              <div className=\"particle\">\n                <div className=\"particle-content\">\n                  <div className=\"symbol\" dangerouslySetInnerHTML={{ __html: subt.symbol}}></div>\n                  <div className=\"name\">{subt.name}</div>\n                </div>\n              </div>\n            ))}\n          </section>\n        ))\n      \n    // } else {\n    //   particlesrendered = antiparticles.default.map(p => (\n    //       <section className={\"area-\" + p.particle.split(' ').join('-') + \" zone\"}>\n    //         {p.subtypes.map(subt => (\n    //           <div className=\"particle\">\n    //             <div className=\"particle-content\">\n    //               <div className=\"symbol\"><span className=\"symbol-text\">{subt.symbol}</span></div>\n    //               <div className=\"name\">{subt.name}</div>\n    //             </div>\n    //           </div>\n    //         ))}\n    //       </section>\n    //     ))\n      \n    // }\n    return (\n      <div className=\"App\">\n        \n        <div className={\"grid-container mode-\" + this.state.substance}>\n          {particlesrendered}\n          <section className=\"controller\" onClick={() => this.changeMode()}>\n            <div className={this.state.substance === \"matter\" ? 'controller-item active' : 'controller-item'}>matter</div>\n            <div className={this.state.substance === \"antimatter\" ? 'controller-item active' : 'controller-item'}>antimatter</div>\n          </section>\n          <section className={\n              (this.state.active[\"type\"] === \"Higgs Boson\") ?\n              \"area-higgs-boson zone active\" :\n              \"area-higgs-boson zone\"\n           } onMouseOver={() => this.changeActive(\"higgs boson\")}>\n            <div className=\"particle\">\n              <div className=\"particle-content\">\n                <div className=\"symbol\">H</div>\n                <div className=\"name\">Higgs Boson</div>\n              </div>\n            </div>\n          </section>\n          <section className=\"infobox\">\n            <h3>{this.state.active.type}</h3>\n            <p dangerouslySetInnerHTML={ { __html: this.state.active.text} }></p>\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}